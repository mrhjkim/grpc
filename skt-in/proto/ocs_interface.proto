syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.skt-in.ocs-interface";
option java_outer_classname = "OcsInterfaceProto";
option objc_class_prefix = "OCSIF";

package ocs_interface;

// Interface exported by the server.
service OcsInterface {
  rpc HeartbeatMessage (HeartbeatRequest) returns (HeartbeatResponse) {}
  rpc ServiceMessage (ServiceRequest) returns (ServiceResponse) {}
}

// The heartbeat request message 
message HeartbeatRequest {
  string node_name = 1;
}

// The heartbeat response message 
enum SystemStatus {
  SYSTEM_STATUS_UNKNOWN = 0;
  SYSTEM_STATUS_ACTIVE = 1;
  SYSTEM_STATUS_STANDBY = 2;
}
message HeartbeatResponse {
  string node_name = 1;
  SystemStatus status = 2;
}

// The service request message 
enum MessageType {
  MESSAGE_TYPE_SCPAS = 0;
  MESSAGE_TYPE_AAA = 1;
  MESSAGE_TYPE_INQ = 2;
  // TODO ...
}
message ServiceRequest {
  MessageType message_type = 1;
  string source_node_name = 2;
  string destination_node_name = 3;
  string user_key = 4;
  string session_id = 5;
  bytes data = 6;
}

// The service response message
message ServiceResponse {
  MessageType message_type = 1;
  string source_node_name = 2;
  string destination_node_name = 3;
  string user_key = 4;
  string session_id = 5;
  bytes data = 6;  
}

